esphome:
  name: ir-transmitter-receiver
  friendly_name: IR Transmitter Receiver

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:
  - platform: esphome
    password: !secret ota

captive_portal:

esp8266:
  board: nodemcuv2

# Enable logging
logger:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Ir-Transmitter-Receiver"
    password: !secret wifi_password

web_server:
  port: 80

globals:
  - id: ir_address
    type: int
    restore_value: no
    initial_value: "0x1A3D"

  - id: ir_command
    type: int
    restore_value: no
    initial_value: "0xAB2C"

# LED state
switch:
  - platform: gpio
    pin: D3
    id: led_1
    name: "LED State"
    
# IR transmitter 
remote_transmitter:
  pin: D5
  carrier_duty_percent: 50%

# IR receiver 
remote_receiver:
  pin:
    number: D7
    inverted: True
  dump: all
  id: ir_receiver
  tolerance: 20%
  filter: 100us
  on_nec:
    then:
      - lambda: |-
          ESP_LOGI("IR Receiver", "Received NEC: address=0x%X, command=0x%X", x.address, x.command);
      - if:
          condition:
            and:
              - lambda: 'return (x.address == id(ir_address));'  
              - lambda: 'return (x.command == id(ir_command));' 
          then:
            - switch.toggle: led_1
            - logger.log: "Received matching IR code - toggling LED"

button:
  - platform: template
    name: "IR Send Button"
    on_press:
      - remote_transmitter.transmit_nec:
          address: !lambda 'return id(ir_address);'  
          command: !lambda 'return id(ir_command);' 
      - lambda: |-
          ESP_LOGI("IR Transmitter", "Sent NEC: address=0x%04X, command=0x%04X", id(ir_address), id(ir_command));
